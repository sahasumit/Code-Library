
// lcs iterative solution with printing lcs

#include <stdio.h>
#include <string.h>
#define MAX 10000

char fst[MAX],sec[MAX],b[MAX][MAX];
int map[MAX][MAX];

void PrintLCS(int i,int j)
{
    if(!i || !j) return;
    if(b[i][j]=='a')
    {
        PrintLCS(i-1,j-1);
        printf("%c",fst[i-1]);
    }
    else if(b[i][j]=='b')
        PrintLCS(i-1,j);
    else PrintLCS(i,j-1);
}

int main()
{
    int i,j,slen,flen;
    printf("Enter first string: ");
    gets(fst);
    printf("Enter first string: ");
    gets(sec);

    flen=strlen(fst);
    slen=strlen(sec);
    for(i=1; i<=flen; i++) map[i][0]=0; //1st coloumn = 0
    for(i=0; i<=slen; i++) map[0][i]=0; //1st row = 0

    for(i=1; i<=flen; i++)
        for(j=1; j<=slen; j++)
        {
            if(fst[i-1]==sec[j-1])
            {
                map[i][j]=map[i-1][j-1]+1;
                b[i][j]='a';
            }
            else if(map[i-1][j]>=map[i][j-1])
            {
                map[i][j]=map[i-1][j];
                b[i][j]='b';
            }
            else
            {
                map[i][j]=map[i][j-1];
                b[i][j]='c';
            }
        }

    printf("\nLongest Common Subsequence: ");
    PrintLCS(i-1,j-1);
    printf("\nLength: %d",map[flen][slen]);

    return 0;
}